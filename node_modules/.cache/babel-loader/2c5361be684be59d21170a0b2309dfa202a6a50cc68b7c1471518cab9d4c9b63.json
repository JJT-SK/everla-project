{"ast":null,"code":"var _jsxFileName = \"/Users/jackdooney/Everla Project/src/components/SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabase';\nimport './SignIn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Enter your details to sign-in');\n  const [connectionStatus, setConnectionStatus] = useState('Testing connection...');\n  const navigate = useNavigate();\n\n  // Test Supabase connection on component mount\n  useEffect(() => {\n    testSupabaseConnection();\n  }, []);\n\n  // Load saved credentials on component mount\n  useEffect(() => {\n    const savedEmail = localStorage.getItem('rememberedEmail');\n    const savedPassword = localStorage.getItem('rememberedPassword');\n    const savedRememberMe = localStorage.getItem('rememberMe') === 'true';\n    if (savedRememberMe && savedEmail && savedPassword) {\n      setEmail(savedEmail);\n      setPassword(savedPassword);\n      setRememberMe(true);\n    }\n  }, []);\n  const testSupabaseConnection = async () => {\n    try {\n      // Test basic connection by getting the current user (should return null if not authenticated)\n      const {\n        data,\n        error\n      } = await supabase.auth.getUser();\n      if (error) {\n        console.error('Supabase connection error:', error);\n        setConnectionStatus('❌ Connection failed: ' + error.message);\n      } else {\n        console.log('Supabase connection successful');\n        setConnectionStatus('✅ Connected to Supabase');\n\n        // Test database access by trying to query the users table\n        try {\n          const {\n            data: tableData,\n            error: tableError\n          } = await supabase.from('users').select('count').limit(1);\n          if (tableError) {\n            console.error('Table access error:', tableError);\n            setConnectionStatus('⚠️ Connected but table access issue: ' + tableError.message);\n          } else {\n            setConnectionStatus('✅ Connected to Supabase and database');\n          }\n        } catch (tableError) {\n          console.error('Table test error:', tableError);\n          setConnectionStatus('⚠️ Connected but database access issue');\n        }\n      }\n    } catch (error) {\n      console.error('Connection test error:', error);\n      setConnectionStatus('❌ Connection failed: ' + error.message);\n    }\n  };\n  const handleSignIn = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage('Enter your details to sign-in');\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email: email,\n        password: password\n      });\n      if (error) {\n        if (error.message.includes('Invalid login credentials')) {\n          setErrorMessage('Invalid email or password. Please try again.');\n        } else if (error.message.includes('Email not confirmed')) {\n          setErrorMessage('Please verify your email address before signing in.');\n        } else {\n          setErrorMessage('An error occurred during sign in. Please try again.');\n        }\n        return;\n      }\n      if (data.user) {\n        // Handle remember me functionality\n        if (rememberMe) {\n          localStorage.setItem('rememberedEmail', email);\n          localStorage.setItem('rememberedPassword', password);\n          localStorage.setItem('rememberMe', 'true');\n        } else {\n          localStorage.removeItem('rememberedEmail');\n          localStorage.removeItem('rememberedPassword');\n          localStorage.removeItem('rememberMe');\n        }\n\n        // Update last_login in the users table\n        try {\n          const {\n            error: updateError\n          } = await supabase.from('users').update({\n            last_login: new Date().toISOString()\n          }).eq('id', data.user.id);\n          if (updateError) {\n            console.error('Error updating last_login:', updateError);\n          }\n        } catch (updateError) {\n          console.error('Error updating last_login:', updateError);\n        }\n\n        // Navigate to home page\n        navigate('/home');\n      }\n    } catch (error) {\n      console.error('Sign in error:', error);\n      setErrorMessage('An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signin-subtitle\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: connectionStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSignIn,\n        className: \"signin-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Enter your email\",\n            required: true,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your password\",\n            required: true,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-options\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: rememberMe,\n              onChange: e => setRememberMe(e.target.checked),\n              className: \"checkbox-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkmark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), \"Remember me\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          className: \"signin-button\",\n          children: isLoading ? 'Signing in...' : 'Sign in'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signin-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/signup\",\n            className: \"link\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"hXHsW6o42eKZAQWRXJ0+wZTjADs=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","jsxDEV","_jsxDEV","SignIn","_s","email","setEmail","password","setPassword","rememberMe","setRememberMe","isLoading","setIsLoading","errorMessage","setErrorMessage","connectionStatus","setConnectionStatus","navigate","testSupabaseConnection","savedEmail","localStorage","getItem","savedPassword","savedRememberMe","data","error","auth","getUser","console","message","log","tableData","tableError","from","select","limit","handleSignIn","e","preventDefault","signInWithPassword","includes","user","setItem","removeItem","updateError","update","last_login","Date","toISOString","eq","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","placeholder","required","checked","disabled","href","_c","$RefreshReg$"],"sources":["/Users/jackdooney/Everla Project/src/components/SignIn.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabase';\nimport './SignIn.css';\n\nconst SignIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Enter your details to sign-in');\n  const [connectionStatus, setConnectionStatus] = useState('Testing connection...');\n  const navigate = useNavigate();\n\n  // Test Supabase connection on component mount\n  useEffect(() => {\n    testSupabaseConnection();\n  }, []);\n\n  // Load saved credentials on component mount\n  useEffect(() => {\n    const savedEmail = localStorage.getItem('rememberedEmail');\n    const savedPassword = localStorage.getItem('rememberedPassword');\n    const savedRememberMe = localStorage.getItem('rememberMe') === 'true';\n    \n    if (savedRememberMe && savedEmail && savedPassword) {\n      setEmail(savedEmail);\n      setPassword(savedPassword);\n      setRememberMe(true);\n    }\n  }, []);\n\n  const testSupabaseConnection = async () => {\n    try {\n      // Test basic connection by getting the current user (should return null if not authenticated)\n      const { data, error } = await supabase.auth.getUser();\n      \n      if (error) {\n        console.error('Supabase connection error:', error);\n        setConnectionStatus('❌ Connection failed: ' + error.message);\n      } else {\n        console.log('Supabase connection successful');\n        setConnectionStatus('✅ Connected to Supabase');\n        \n        // Test database access by trying to query the users table\n        try {\n          const { data: tableData, error: tableError } = await supabase\n            .from('users')\n            .select('count')\n            .limit(1);\n          \n          if (tableError) {\n            console.error('Table access error:', tableError);\n            setConnectionStatus('⚠️ Connected but table access issue: ' + tableError.message);\n          } else {\n            setConnectionStatus('✅ Connected to Supabase and database');\n          }\n        } catch (tableError) {\n          console.error('Table test error:', tableError);\n          setConnectionStatus('⚠️ Connected but database access issue');\n        }\n      }\n    } catch (error) {\n      console.error('Connection test error:', error);\n      setConnectionStatus('❌ Connection failed: ' + error.message);\n    }\n  };\n\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage('Enter your details to sign-in');\n\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: email,\n        password: password,\n      });\n\n      if (error) {\n        if (error.message.includes('Invalid login credentials')) {\n          setErrorMessage('Invalid email or password. Please try again.');\n        } else if (error.message.includes('Email not confirmed')) {\n          setErrorMessage('Please verify your email address before signing in.');\n        } else {\n          setErrorMessage('An error occurred during sign in. Please try again.');\n        }\n        return;\n      }\n\n      if (data.user) {\n        // Handle remember me functionality\n        if (rememberMe) {\n          localStorage.setItem('rememberedEmail', email);\n          localStorage.setItem('rememberedPassword', password);\n          localStorage.setItem('rememberMe', 'true');\n        } else {\n          localStorage.removeItem('rememberedEmail');\n          localStorage.removeItem('rememberedPassword');\n          localStorage.removeItem('rememberMe');\n        }\n\n        // Update last_login in the users table\n        try {\n          const { error: updateError } = await supabase\n            .from('users')\n            .update({ last_login: new Date().toISOString() })\n            .eq('id', data.user.id);\n\n          if (updateError) {\n            console.error('Error updating last_login:', updateError);\n          }\n        } catch (updateError) {\n          console.error('Error updating last_login:', updateError);\n        }\n\n        // Navigate to home page\n        navigate('/home');\n      }\n    } catch (error) {\n      console.error('Sign in error:', error);\n      setErrorMessage('An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"signin-container\">\n      <div className=\"signin-card\">\n        <div className=\"signin-header\">\n          <h1>Welcome back</h1>\n          <p className=\"signin-subtitle\">{errorMessage}</p>\n          <div className=\"connection-status\">\n            <small>{connectionStatus}</small>\n          </div>\n        </div>\n\n        <form onSubmit={handleSignIn} className=\"signin-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              required\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              required\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-options\">\n            <label className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                checked={rememberMe}\n                onChange={(e) => setRememberMe(e.target.checked)}\n                className=\"checkbox-input\"\n              />\n              <span className=\"checkmark\"></span>\n              Remember me\n            </label>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"signin-button\"\n          >\n            {isLoading ? 'Signing in...' : 'Sign in'}\n          </button>\n        </form>\n\n        <div className=\"signin-footer\">\n          <p>\n            Don't have an account?{' '}\n            <a href=\"/signup\" className=\"link\">\n              Sign up\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}