{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,Link}from'react-router-dom';import{supabase}from'../supabase';import'./SignIn.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignIn=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[rememberMe,setRememberMe]=useState(false);const[isLoading,setIsLoading]=useState(false);const[errorMessage,setErrorMessage]=useState('Enter your details to sign-in');const navigate=useNavigate();// Load saved credentials on component mount\nuseEffect(()=>{const savedEmail=localStorage.getItem('rememberedEmail');const savedPassword=localStorage.getItem('rememberedPassword');const savedRememberMe=localStorage.getItem('rememberMe')==='true';if(savedRememberMe&&savedEmail&&savedPassword){setEmail(savedEmail);setPassword(savedPassword);setRememberMe(true);}},[]);const handleSignIn=async e=>{e.preventDefault();setIsLoading(true);setErrorMessage('Enter your details to sign-in');try{const{data,error}=await supabase.auth.signInWithPassword({email:email,password:password});if(error){if(error.message.includes('Invalid login credentials')){setErrorMessage('Invalid email or password. Please try again.');}else if(error.message.includes('Email not confirmed')){setErrorMessage('Please verify your email address before signing in.');}else if(error.message.includes('Auth session missing')){setErrorMessage('Please enter your email and password to sign in.');}else if(error.message.includes('Too many requests')){setErrorMessage('Too many sign-in attempts. Please wait a moment and try again.');}else{setErrorMessage('Unable to sign in. Please check your details and try again.');}return;}if(data.user){// Handle remember me functionality\nif(rememberMe){localStorage.setItem('rememberedEmail',email);localStorage.setItem('rememberedPassword',password);localStorage.setItem('rememberMe','true');}else{localStorage.removeItem('rememberedEmail');localStorage.removeItem('rememberedPassword');localStorage.removeItem('rememberMe');}// Check if user exists in our custom tables, if not, create them\ntry{console.log('=== DATA SYNC START ===');console.log('User ID:',data.user.id);console.log('User Email:',data.user.email);console.log('User Metadata:',data.user.user_metadata);// First, check if user exists in our users table\nconsole.log('Checking if user exists in users table...');const{error:userCheckError}=await supabase.from('users').select('*').eq('id',data.user.id).single();if(userCheckError&&userCheckError.code==='PGRST116'){var _data$user$user_metad;// User doesn't exist in our table, create them\nconsole.log('User not found in custom table, creating...');const userData={id:data.user.id,email:data.user.email,username:((_data$user$user_metad=data.user.user_metadata)===null||_data$user$user_metad===void 0?void 0:_data$user$user_metad.username)||email.split('@')[0],date_joined:new Date().toISOString()};console.log('Attempting to insert user data:',userData);const{error:userInsertError}=await supabase.from('users').insert(userData);if(userInsertError){console.error('❌ Error creating user in custom table:',userInsertError);console.error('Error details:',JSON.stringify(userInsertError,null,2));}else{console.log('✅ User created in custom table successfully');}}else if(userCheckError){console.error('❌ Error checking user in custom table:',userCheckError);console.error('Error details:',JSON.stringify(userCheckError,null,2));}else{console.log('✅ User already exists in custom table');}// Always check if profile exists, regardless of user creation\nconsole.log('Checking if profile exists in user_profiles table...');const{error:profileCheckError}=await supabase.from('user_profiles').select('*').eq('user_id',data.user.id).single();if(profileCheckError&&profileCheckError.code==='PGRST116'){// Profile doesn't exist, create a default one\nconsole.log('Profile not found, creating default profile...');const profileData={user_id:data.user.id,gender:'Other',country:'Unknown',dob:new Date('1990-01-01').toISOString()};console.log('Attempting to insert profile data:',profileData);const{error:profileInsertError}=await supabase.from('user_profiles').insert(profileData);if(profileInsertError){console.error('❌ Error creating profile:',profileInsertError);console.error('Error details:',JSON.stringify(profileInsertError,null,2));}else{console.log('✅ Default profile created successfully');}}else if(profileCheckError){console.error('❌ Error checking profile:',profileCheckError);console.error('Error details:',JSON.stringify(profileCheckError,null,2));}else{console.log('✅ Profile already exists');}console.log('=== DATA SYNC COMPLETED ===');}catch(syncError){console.error('❌ Error syncing user data:',syncError);console.error('Sync error details:',JSON.stringify(syncError,null,2));}// Update last_login in the users table\ntry{const{error:updateError}=await supabase.from('users').update({last_login:new Date().toISOString()}).eq('id',data.user.id);if(updateError){console.error('Error updating last_login:',updateError);}}catch(updateError){console.error('Error updating last_login:',updateError);}// Navigate to home page\nnavigate('/home');}}catch(error){console.error('Sign in error:',error);setErrorMessage('Something went wrong. Please try again.');}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"signin-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"signin-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"signin-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome back\"}),/*#__PURE__*/_jsx(\"p\",{className:\"signin-subtitle\",children:errorMessage})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSignIn,className:\"signin-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Enter your email\",required:true,className:\"form-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Enter your password\",required:true,className:\"form-input\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-options\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:rememberMe,onChange:e=>setRememberMe(e.target.checked),className:\"checkbox-input\"}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),\"Remember me\"]})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,className:\"signin-button\",children:isLoading?'Signing in...':'Sign in'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"signin-footer\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account?\",' ',/*#__PURE__*/_jsx(Link,{to:\"/signup\",className:\"link\",children:\"Sign up\"})]})})]})});};export default SignIn;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","supabase","jsx","_jsx","jsxs","_jsxs","SignIn","email","setEmail","password","setPassword","rememberMe","setRememberMe","isLoading","setIsLoading","errorMessage","setErrorMessage","navigate","savedEmail","localStorage","getItem","savedPassword","savedRememberMe","handleSignIn","e","preventDefault","data","error","auth","signInWithPassword","message","includes","user","setItem","removeItem","console","log","id","user_metadata","userCheckError","from","select","eq","single","code","_data$user$user_metad","userData","username","split","date_joined","Date","toISOString","userInsertError","insert","JSON","stringify","profileCheckError","profileData","user_id","gender","country","dob","profileInsertError","syncError","updateError","update","last_login","className","children","onSubmit","htmlFor","type","value","onChange","target","placeholder","required","checked","disabled","to"],"sources":["/Users/jackdooney/Everla Project/src/components/SignIn.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { supabase } from '../supabase';\nimport './SignIn.css';\n\nconst SignIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('Enter your details to sign-in');\n  const navigate = useNavigate();\n\n  // Load saved credentials on component mount\n  useEffect(() => {\n    const savedEmail = localStorage.getItem('rememberedEmail');\n    const savedPassword = localStorage.getItem('rememberedPassword');\n    const savedRememberMe = localStorage.getItem('rememberMe') === 'true';\n    \n    if (savedRememberMe && savedEmail && savedPassword) {\n      setEmail(savedEmail);\n      setPassword(savedPassword);\n      setRememberMe(true);\n    }\n  }, []);\n\n  const handleSignIn = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage('Enter your details to sign-in');\n\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email: email,\n        password: password,\n      });\n\n      if (error) {\n        if (error.message.includes('Invalid login credentials')) {\n          setErrorMessage('Invalid email or password. Please try again.');\n        } else if (error.message.includes('Email not confirmed')) {\n          setErrorMessage('Please verify your email address before signing in.');\n        } else if (error.message.includes('Auth session missing')) {\n          setErrorMessage('Please enter your email and password to sign in.');\n        } else if (error.message.includes('Too many requests')) {\n          setErrorMessage('Too many sign-in attempts. Please wait a moment and try again.');\n        } else {\n          setErrorMessage('Unable to sign in. Please check your details and try again.');\n        }\n        return;\n      }\n\n      if (data.user) {\n        // Handle remember me functionality\n        if (rememberMe) {\n          localStorage.setItem('rememberedEmail', email);\n          localStorage.setItem('rememberedPassword', password);\n          localStorage.setItem('rememberMe', 'true');\n        } else {\n          localStorage.removeItem('rememberedEmail');\n          localStorage.removeItem('rememberedPassword');\n          localStorage.removeItem('rememberMe');\n        }\n\n        // Check if user exists in our custom tables, if not, create them\n        try {\n          console.log('=== DATA SYNC START ===');\n          console.log('User ID:', data.user.id);\n          console.log('User Email:', data.user.email);\n          console.log('User Metadata:', data.user.user_metadata);\n          \n          // First, check if user exists in our users table\n          console.log('Checking if user exists in users table...');\n          const { error: userCheckError } = await supabase\n            .from('users')\n            .select('*')\n            .eq('id', data.user.id)\n            .single();\n\n          if (userCheckError && userCheckError.code === 'PGRST116') {\n            // User doesn't exist in our table, create them\n            console.log('User not found in custom table, creating...');\n            \n            const userData = {\n              id: data.user.id,\n              email: data.user.email,\n              username: data.user.user_metadata?.username || email.split('@')[0],\n              date_joined: new Date().toISOString()\n            };\n            \n            console.log('Attempting to insert user data:', userData);\n            \n            const { error: userInsertError } = await supabase\n              .from('users')\n              .insert(userData);\n\n            if (userInsertError) {\n              console.error('❌ Error creating user in custom table:', userInsertError);\n              console.error('Error details:', JSON.stringify(userInsertError, null, 2));\n            } else {\n              console.log('✅ User created in custom table successfully');\n            }\n          } else if (userCheckError) {\n            console.error('❌ Error checking user in custom table:', userCheckError);\n            console.error('Error details:', JSON.stringify(userCheckError, null, 2));\n          } else {\n            console.log('✅ User already exists in custom table');\n          }\n\n          // Always check if profile exists, regardless of user creation\n          console.log('Checking if profile exists in user_profiles table...');\n          const { error: profileCheckError } = await supabase\n            .from('user_profiles')\n            .select('*')\n            .eq('user_id', data.user.id)\n            .single();\n\n          if (profileCheckError && profileCheckError.code === 'PGRST116') {\n            // Profile doesn't exist, create a default one\n            console.log('Profile not found, creating default profile...');\n            \n            const profileData = {\n              user_id: data.user.id,\n              gender: 'Other',\n              country: 'Unknown',\n              dob: new Date('1990-01-01').toISOString()\n            };\n            \n            console.log('Attempting to insert profile data:', profileData);\n            \n            const { error: profileInsertError } = await supabase\n              .from('user_profiles')\n              .insert(profileData);\n\n            if (profileInsertError) {\n              console.error('❌ Error creating profile:', profileInsertError);\n              console.error('Error details:', JSON.stringify(profileInsertError, null, 2));\n            } else {\n              console.log('✅ Default profile created successfully');\n            }\n          } else if (profileCheckError) {\n            console.error('❌ Error checking profile:', profileCheckError);\n            console.error('Error details:', JSON.stringify(profileCheckError, null, 2));\n          } else {\n            console.log('✅ Profile already exists');\n          }\n          \n          console.log('=== DATA SYNC COMPLETED ===');\n        } catch (syncError) {\n          console.error('❌ Error syncing user data:', syncError);\n          console.error('Sync error details:', JSON.stringify(syncError, null, 2));\n        }\n\n        // Update last_login in the users table\n        try {\n          const { error: updateError } = await supabase\n            .from('users')\n            .update({ last_login: new Date().toISOString() })\n            .eq('id', data.user.id);\n\n          if (updateError) {\n            console.error('Error updating last_login:', updateError);\n          }\n        } catch (updateError) {\n          console.error('Error updating last_login:', updateError);\n        }\n\n        // Navigate to home page\n        navigate('/home');\n      }\n    } catch (error) {\n      console.error('Sign in error:', error);\n      setErrorMessage('Something went wrong. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"signin-container\">\n      <div className=\"signin-card\">\n        <div className=\"signin-header\">\n          <h1>Welcome back</h1>\n          <p className=\"signin-subtitle\">{errorMessage}</p>\n        </div>\n\n        <form onSubmit={handleSignIn} className=\"signin-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              required\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              required\n              className=\"form-input\"\n            />\n          </div>\n\n          <div className=\"form-options\">\n            <label className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                checked={rememberMe}\n                onChange={(e) => setRememberMe(e.target.checked)}\n                className=\"checkbox-input\"\n              />\n              <span className=\"checkmark\"></span>\n              Remember me\n            </label>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"signin-button\"\n          >\n            {isLoading ? 'Signing in...' : 'Sign in'}\n          </button>\n        </form>\n\n        <div className=\"signin-footer\">\n          <p>\n            Don't have an account?{' '}\n            <Link to=\"/signup\" className=\"link\">\n              Sign up\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}